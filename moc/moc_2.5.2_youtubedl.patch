diff '--color=always' -pruN '--color=never' moc-2.5.2.orig/files.c moc-2.5.2/files.c
--- moc-2.5.2.orig/files.c	2021-04-12 11:18:32.280395460 +0300
+++ moc-2.5.2/files.c	2021-04-12 11:37:27.918391538 +0300
@@ -21,6 +21,7 @@
 #include <string.h>
 #include <errno.h>
 #include <stdlib.h>
+#include <regex.h>
 
 #ifdef HAVE_LIBMAGIC
 #include <magic.h>
@@ -93,6 +94,7 @@ void files_cleanup ()
 inline int is_url (const char *str)
 {
 	return !strncasecmp (str, "http://", sizeof ("http://") - 1)
+		|| !strncasecmp (str, "https://", sizeof ("https://") - 1)
 		|| !strncasecmp (str, "ftp://", sizeof ("ftp://") - 1);
 }
 
@@ -709,13 +711,98 @@ char *absolute_path (const char *path, c
 		strcpy (result, tmp);
 	}
 	else {
-		result = (char *)xmalloc (sizeof(char) * (strlen(path)+1));
-		strcpy (result, path);
+		if (is_yt_url(path)) {
+			/* do conversion of link with youtube-dl */
+			result = parse_yt_link(path);
+		} else {
+			result = (char *)xmalloc (sizeof(char) * (strlen(path)+1));
+			strcpy (result, path);
+		}
 	}
 
 	return result;
 }
 
+/* use a regex
+ * This will allow to identify if the link is a youtube link. */
+bool is_yt_url(const char *str)
+{
+	regex_t regex;
+	int regrc;
+	bool ret;
+	char error[256];
+
+	/* Build regex to check for youtube link. */
+	regrc = regcomp(&regex, "https?://(www[.]|m[.])?(youtube[.]com|youtu[.]be)/",
+			REG_EXTENDED);
+	if (regrc) {
+		/* we could not compile regex return false. */
+		regerror(regrc, (const regex_t *)&regex, error, sizeof(error));
+		//fprintf(stderr, "DEBUG: no compile:\n%s\n%s\n", str, error);
+		assert(0);
+		return false;
+	}
+
+	regrc = regexec(&regex, str, 0, NULL, 0);
+	if (!regrc) {
+		/* yeah youtube link */
+		ret = true;
+	} else {
+		/* something went wrong so no youtube link */
+		ret = false;
+	}
+
+	regfree(&regex);
+	return ret;
+}
+
+char * parse_yt_link(const char * url)
+{
+	char cmd[256] = {0x0};
+	char result[4096] = {0x0};
+	char *tmp;
+	FILE *in = NULL;
+	long total = 0;
+	int ret;
+	size_t size;
+
+#ifdef NDEBUG
+# define OUTPUT "/dev/null"
+#else
+# define OUTPUT "/tmp/mocp-youtubedl-log"
+#endif
+	snprintf(cmd, sizeof(cmd),
+		"/usr/bin/youtube-dl --no-call-home --audio-format 'best' -g '%s' 2>%s",
+		url, OUTPUT);
+
+	in = popen(cmd,"r");
+	if (in == NULL) {
+		perror("Shell execution error");
+		return url;
+	}
+
+	while (fgets(result, 4096, in) != NULL)
+		total += atol(result);
+
+	if (!feof(in)) {
+		perror("Input Stream error");
+		return url;
+	}
+	pclose(in);
+
+	/* remove newline from fgets */
+	char * pos;
+	if ((pos = strchr(result, '\n')) != NULL)
+		*pos = '\0';
+
+	/* allocate memory for link */
+	size = strlen(result);
+	tmp = (char *)xmalloc (sizeof(char) * (strlen(result)+1));
+	strcpy (tmp, result);
+
+	return (tmp != NULL) ? tmp : url;
+}
+
 /* Check that a file which may cause other applications to be invoked
  * is secure against tampering. */
 bool is_secure (const char *file)
diff '--color=always' -pruN '--color=never' moc-2.5.2.orig/files.h moc-2.5.2/files.h
--- moc-2.5.2.orig/files.h	2021-04-12 11:18:32.276395460 +0300
+++ moc-2.5.2/files.h	2021-04-12 11:38:13.906391379 +0300
@@ -36,6 +36,8 @@ int is_dir (const char *file);
 int can_read_file (const char *file);
 char *absolute_path (const char *path, const char *cwd);
 bool is_secure (const char *file);
+bool is_yt_url (const char *file);
+char * parse_yt_link(const char * url);
 
 #ifdef __cplusplus
 }
diff '--color=always' -pruN '--color=never' moc-2.5.2.orig/io_curl.c moc-2.5.2/io_curl.c
--- moc-2.5.2.orig/io_curl.c	2021-04-12 11:18:32.278395460 +0300
+++ moc-2.5.2/io_curl.c	2021-04-12 11:39:13.931391172 +0300
@@ -263,6 +263,7 @@ void io_curl_open (struct io_stream *s,
 	curl_easy_setopt (s->curl.handle, CURLOPT_FOLLOWLOCATION, 1);
 	curl_easy_setopt (s->curl.handle, CURLOPT_FAILONERROR, 1);
 	curl_easy_setopt (s->curl.handle, CURLOPT_MAXREDIRS, 15);
+	curl_easy_setopt (s->curl.handle, CURLOPT_SSL_VERIFYPEER, 0);
 	curl_easy_setopt (s->curl.handle, CURLOPT_HTTP200ALIASES,
 			s->curl.http200_aliases);
 	curl_easy_setopt (s->curl.handle, CURLOPT_HTTPHEADER,
diff '--color=always' -pruN '--color=never' moc-2.5.2.orig/player.c moc-2.5.2/player.c
--- moc-2.5.2.orig/player.c	2021-04-12 11:18:32.281395460 +0300
+++ moc-2.5.2/player.c	2021-04-12 11:40:28.748390914 +0300
@@ -851,7 +851,14 @@ void player (const char *file, const cha
 		status_msg ("Connecting...");
 
 		LOCK (decoder_stream_mut);
-		decoder_stream = io_open (file, 1);
+		char *url;
+		if (is_yt_url(file)) {
+			url = parse_yt_link(file);
+			logit("[YT]: converted %s to %s", file, url);
+		} else {
+			url = file;
+		}
+		decoder_stream = io_open (url, 1);
 		if (!io_ok(decoder_stream)) {
 			error ("Could not open URL: %s", io_strerror(decoder_stream));
 			io_close (decoder_stream);
